{-# OPTIONS_HADDOCK show-extensions #-}

-- |
-- Module      :  Yi.Buffer.Adjusted
-- License     :  GPL-2
-- Maintainer  :  yi-devel@googlegroups.com
-- Stability   :  experimental
-- Portability :  portable
--
-- This module re-exports Yi.Buffer overriding insert* and delete* functions
-- with their more indent-aware variants. It is intended to be imported
-- instead of Yi.Buffer or qualified to avoid name clashes.

module Yi.Buffer.Adjusted
    ( bdeleteB
    , insertB
    , insertN
    , insertNAt
    , deleteB
    , deleteN
    , deleteRegionB
    , deleteRegionWithStyleB
    , module Yi.Buffer
    ) where

import Control.Applicative ( (<$>) )
import Control.Monad ( when, forM_ )
import Yi.Buffer
    ( Region(..),
      WindowRef(..),
      Size(..),
      Point(..),
      Mark(..),
      Direction(..),
      BufferRef(..),
      reverseDir,
      mayReverse,
      directionElim,
      unionRegion,
      regionsOverlap,
      regionSize,
      regionLast,
      regionIsEmpty,
      regionFirst,
      nearRegion,
      mkSizeRegion,
      mkRegion',
      mkRegion,
      intersectRegion,
      includedRegion,
      inRegion,
      fmapRegion,
      emptyRegion,
      SearchExp,
      MarkValue(..),
      markGravityAA,
      markPointAA,
      Update(..),
      Overlay(..),
      UIUpdate(..),
      updateIsDelete,
      mkOverlay,
      Change(..),
      URList,
      emptyU,
      addChangeU,
      setSavedFilePointU,
      undoU,
      redoU,
      isAtSavedFilePointU,
      RegionStyle(..),
      IndentBehaviour(..),
      Mode(..),
      AnyMode(..),
      BufferId(..),
      MarkSet(..),
      WinMarks,
      FBuffer(..),
      IndentSettings(..),
      BufferM(..),
      directoryContentA,
      encodingConverterNameA,
      fontsizeVariationA,
      identA,
      insertingA,
      keymapProcessA,
      lastActiveWindowA,
      lastSyncTimeA,
      pendingUpdatesA,
      pointFollowsWindowA,
      preferColA,
      readOnlyA,
      undosA,
      shortIdentString,
      identString,
      miniIdentString,
      clearSyntax,
      file,
      highlightSelectionA,
      rectangleSelectionA,
      increaseFontSize,
      decreaseFontSize,
      getModeLine,
      getPercent,
      addOverlayB,
      getOverlaysOfOwnerB,
      delOverlayB,
      delOverlaysOfOwnerB,
      isPointInsideOverlay,
      runBuffer,
      getMarks,
      runBufferFull,
      getMarkValueB,
      newMarkB,
      deleteMarkB,
      runBufferDummyWindow,
      markSavedB,
      bkey,
      isUnchangedBuffer,
      startUpdateTransactionB,
      commitUpdateTransactionB,
      undoB,
      redoB,
      retroactivelyAtSavePointB,
      modeAlwaysApplies,
      modeNeverApplies,
      emptyMode,
      newB,
      sizeB,
      pointB,
      nelemsB,
      streamB,
      indexedStreamB,
      strokesRangesB,
      moveTo,
      setInserting,
      applyUpdate,
      revertPendingUpdatesB,
      writeB,
      writeN,
      newlineB,
      curLn,
      markLines,
      gotoLn,
      setMode0,
      setAnyMode,
      setMode,
      modifyMode,
      onMode,
      withMode0,
      withModeB,
      withSyntaxB,
      focusSyntax,
      withSyntaxB',
      regexRegionB,
      regexB,
      modifyMarkB,
      setMarkHereB,
      setNamedMarkHereB,
      setVisibleSelection,
      askMarks,
      getMarkB,
      mayGetMarkB,
      moveN,
      leftB,
      leftN,
      rightB,
      rightN,
      lineMoveRel,
      movingToPrefCol,
      movingToPrefVisCol,
      moveToColB,
      moveToLineColB,
      pointOfLineColB,
      forgetPreferCol,
      savingPrefCol,
      lineUp,
      lineDown,
      elemsB,
      betweenB,
      readB,
      readAtB,
      replaceCharB,
      replaceCharWithBelowB,
      replaceCharWithAboveB,
      insertCharWithBelowB,
      insertCharWithAboveB,
      indentSettingsB,
      curCol,
      colOf,
      lineOf,
      lineCountB,
      solPointB,
      eolPointB,
      gotoLnFrom,
      getBufferDyn,
      putBufferDyn,
      savingExcursionB,
      markPointA,
      savingPointB,
      savingPositionB,
      pointAt,
      pointAfterCursorB,
      destinationOfMoveB,
      askWindow,
      withEveryLineB,
      expandTabsA,
      shiftWidthA,
      tabSizeA,
      modeAdjustBlockA,
      modeAppliesA,
      modeFollowA,
      modeGetStrokesA,
      modeGotoDeclarationA,
      modeHLA,
      modeIndentA,
      modeIndentSettingsA,
      modeKeymapA,
      modeModeLineA,
      modeNameA,
      modeOnLoadA,
      modePrettifyA,
      modeToggleCommentSelectionA,
      winRegionB,
      readRegionB,
      replaceRegionB,
      mapRegionB,
      swapRegionsB,
      modifyRegionB,
      inclusiveRegionB,
      blockifyRegion,
      joinLinesB,
      concatLinesB,
      BoundarySide(..),
      TextUnit(..),
      outsideUnit,
      unitWord,
      unitDelimited,
      isWordChar,
      checkPeekB,
      unitViWord,
      unitViWORD,
      unitViWordAnyBnd,
      unitViWORDAnyBnd,
      unitViWordOnLine,
      unitViWORDOnLine,
      isAnySep,
      unitSep,
      unitSepThisLine,
      atBoundaryB,
      unitEmacsParagraph,
      unitParagraph,
      unitSentence,
      leftBoundaryUnit,
      genAtBoundaryB,
      numberOfB,
      whileB,
      untilB,
      doUntilB_,
      untilB_,
      doIfCharB,
      genMoveB,
      genMaybeMoveB,
      moveB,
      maybeMoveB,
      transposeB,
      transformB,
      regionWithTwoMovesB,
      regionOfB,
      regionOfNonEmptyB,
      regionOfPartB,
      regionOfPartNonEmptyB,
      regionOfPartNonEmptyAtB,
      readPrevUnitB,
      readUnitB,
      halfUnit,
      deleteUnitB,
      getRegionStyle,
      putRegionStyle,
      convertRegionToStyleB,
      mkRegionOfStyleB,
      unitWiseRegion,
      extendRegionToBoundaries,
      BufferFileInfo(..),
      moveToSol,
      moveToEol,
      topB,
      botB,
      leftOnEol,
      moveXorSol,
      moveXorEol,
      nextWordB,
      prevWordB,
      gotoCharacterB,
      nextCInLineInc,
      nextCInLineExc,
      prevCInLineInc,
      prevCInLineExc,
      firstNonSpaceB,
      lastNonSpaceB,
      moveNonspaceOrSol,
      isCurrentLineEmptyB,
      isCurrentLineAllWhiteSpaceB,
      nextNParagraphs,
      prevNParagraphs,
      atSol,
      atEol,
      atSof,
      atEof,
      atLastLine,
      getLineAndCol,
      getLineAndColOfPoint,
      readLnB,
      hasWhiteSpaceBefore,
      readCurrentWordB,
      readPrevWordB,
      killWordB,
      bkillWordB,
      bdeleteLineB,
      deleteHorizontalSpaceB,
      uppercaseWordB,
      lowercaseWordB,
      capitaliseWordB,
      switchCaseChar,
      deleteToEol,
      swapB,
      deleteTrailingSpaceB,
      setSelectionMarkPointB,
      getSelectionMarkPointB,
      exchangePointAndMarkB,
      getBookmarkB,
      bufInfoB,
      upScreensB,
      downScreensB,
      upScreenB,
      downScreenB,
      scrollScreensB,
      vimScrollB,
      vimScrollByB,
      scrollToCursorB,
      scrollCursorToTopB,
      scrollCursorToBottomB,
      scrollB,
      scrollToLineAboveWindowB,
      scrollToLineBelowWindowB,
      snapInsB,
      snapScreenB,
      downFromTosB,
      upFromBosB,
      middleB,
      getRawestSelectRegionB,
      getSelectRegionB,
      setSelectRegionB,
      deleteBlankLinesB,
      lineStreamB,
      getNextLineB,
      getNextNonBlankLineB,
      modifyExtendedSelectionB,
      linePrefixSelectionB,
      unLineCommentSelectionB,
      toggleCommentB,
      replaceBufferContent,
      fillParagraph,
      sortLines,
      sortLinesWithRegion,
      revertB,
      shapeOfBlockRegionB,
      leftEdgesOfRegionB,
      rightEdgesOfRegionB,
      splitBlockRegionToContiguousSubRegionsB,
      readRegionRopeWithStyleB,
      insertRopeWithStyleB,
      flipRectangleB,
      movePercentageFileB,
      findMatchingPairB,
      incrementNextNumberByB,
      isNumberB,
      test3CharB,
      testHexB,
      lineMoveVisRel,
      tabB,
      autoIndentB,
      cycleIndentsB,
      indentOfB,
      indentToB,
      modifyIndentB,
      indentAsPreviousB,
      indentAsNextB,
      indentAsTheMostIndentedNeighborLineB,
      newlineAndIndentB,
      shiftIndentOfRegionB,
      indentOfCurrentPosB )
import qualified Yi.Buffer as B ( insertNAt, insertB, deleteN )
import Yi.Misc ( adjBlock )
import Yi.Utils ( SemiNum((~-)) )
import qualified Yi.Rope as R
    ( YiString, take, length, countNewLines )

insertNAt :: R.YiString -> Point -> BufferM ()
insertNAt rope point | R.countNewLines rope > 0 = B.insertNAt rope point
insertNAt rope point = B.insertNAt rope point >> adjBlock (R.length rope)

-- | Insert the list at current point, extending size of buffer
insertN :: R.YiString -> BufferM ()
insertN rope = insertNAt rope =<< pointB

-- | Insert the char at current point, extending size of buffer
insertB :: Char -> BufferM ()
insertB c = B.insertB c >> adjBlock 1

-- | @deleteNAt n p@ deletes @n@ characters forwards from position @p@
deleteNAt :: Direction -> Int -> Point -> BufferM ()
deleteNAt dir n pos = do
  els <- R.take n <$> streamB Forward pos
  applyUpdate (Delete pos dir els)
  when (R.countNewLines els == 0) $
      adjBlock (-(R.length els))

deleteN :: Int -> BufferM ()
deleteN n = pointB >>= deleteNAt Forward n

deleteB :: TextUnit -> Direction -> BufferM ()
deleteB unit dir = deleteRegionB =<< regionOfPartNonEmptyB unit dir

bdeleteB :: BufferM ()
bdeleteB = deleteB Character Backward

deleteRegionB :: Region -> BufferM ()
deleteRegionB r =
    deleteNAt (regionDirection r)
              (fromIntegral (regionEnd r ~- regionStart r))
              (regionStart r)

deleteRegionWithStyleB :: Region -> RegionStyle -> BufferM Point
deleteRegionWithStyleB reg Block = savingPointB $ do
    (start, lengths) <- shapeOfBlockRegionB reg
    moveTo start
    forM_ (zip [1..] lengths) $ \(i, l) -> do
        B.deleteN l
        moveTo start
        lineMoveRel i
    return start

deleteRegionWithStyleB reg style = savingPointB $ do
    effectiveRegion <- convertRegionToStyleB reg style
    deleteRegionB effectiveRegion
    return $! regionStart effectiveRegion
